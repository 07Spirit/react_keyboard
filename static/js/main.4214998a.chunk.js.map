{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","myKey","lastKeyClick","elem","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,MAFX,EAaEC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZH,MAAOE,EAAKE,OAflB,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,gBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,gBAV/C,oBAmBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACGF,KAAKR,MAAMC,MAER,oBAAGS,UAAU,eAAb,sCAEGF,KAAKR,MAAMC,MAFd,OAMC,mBAAGS,UAAU,eAAb,2CA9Bb,GAAyBC,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.4214998a.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  myKey: string | null,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    myKey: null,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.lastKeyClick);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.lastKeyClick);\n  }\n\n  lastKeyClick = (elem: KeyboardEvent) => {\n    this.setState({\n      myKey: elem.key,\n    });\n  };\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"App\">\n        {this.state.myKey\n          ? (\n            <p className=\"App__message\">\n              The last pressed key is [\n              {this.state.myKey}\n              ]\n            </p>\n          )\n          : (<p className=\"App__message\">Nothing was pressed yet</p>)}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}